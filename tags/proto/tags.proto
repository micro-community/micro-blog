syntax = "proto3";

package tags;

option go_package = ".;tags";

service Tags {
	// Add a tag to a resource
	rpc Add(AddRequest) returns (AddResponse) {}
	// Remove a tag from a resource
	rpc Remove(RemoveRequest) returns (RemoveResponse) {}
	// List tags
	rpc List(ListRequest) returns (ListResponse) {}
	// Change properties of a tag, currently only the title and description
	rpc Update(UpdateRequest) returns (UpdateResponse){}
}

message Tag {
	// Type is useful for namespacing and listing across resources,
	// ie. list tags for tags, customers etc.
	string type = 1;
	string slug = 2;
	string title = 3;
	string description = 4;
	int64 count = 5;
}

message AddRequest {
	string resourceID = 1; //this is a post id
	string type = 2;
	repeated string titles = 3; //can handle bulk 
	int64 resourceCreated = 4;
}

message AddResponse{
	repeated bool results = 2;
}

message RemoveRequest {
	string resourceID = 1;
	string type = 2;
	repeated string titles = 3; //can handle bulk 
}

message RemoveResponse{
	repeated bool results = 2;
}

message UpdateRequest {
	string type = 1;
	repeated string titles = 2; //can handle bulk 
	string description = 3;
}

message UpdateResponse{
	repeated bool results = 2;
}

// ListRequest: list either by resource id or type.
// Optionally filter by min or max count.
message ListRequest{
	string resourceID = 1;
	string type = 2;
	int64 minCount = 3;
	int64 maxCount = 4;
}

message ListResponse{
	repeated Tag tags = 1;
}